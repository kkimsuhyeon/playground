version: '3.8'

services:
  consul-server:
    # 서비스 이름
    build:
      context: .
      dockerfile: consul.Dockerfile
    container_name: consul-server # 컨테이너 이름 설정
    restart: always # 컨테이너가 종료되면 자동으로 재시작
    volumes:
      # 볼륨 설정
      - consul-data:/consul/data
      - consul-config:/consul/config
    ports:
      # consul 관련 port
      - "8500:8500"
      - "8600:8600"
      - "8600:8600/udp"
    networks:
      - microservice-network
    healthcheck:
      test: ["CMD", "consul", "health", "status", "leader"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  user-db:
    image: mysql
    container_name: user-db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: user_service_db
      MYSQL_USER: user
      MYSQL_PASSWORD: user
    ports:
      - "3306:3306"
    volumes:
      - user-db-data:/var/lib/mysql
    networks:
      - microservice-network

  redis:
    image: redis:latest
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    command: [ "redis-server", "--requirepass", "test123" ]
    healthcheck:
      test: [ "CMD", "redis-cli", "-a", "test123", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - redis-data:/data
    networks:
      - microservice-network

  api-gateway:
    build:
      context: ../api-gateway
      dockerfile: Dockerfile
    container_name: api-gateway
    restart: always
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - CONSUL_HOST=consul-server
      - CONSUL_PORT=8500
    depends_on:
      consul-server:
        condition: service_healthy
      user-db:
        condition: service_started
      redis:
        condition: service_healthy
    networks:
      - microservice-network

  user-service:
    build:
      context: ../user-service
      dockerfile: Dockerfile
    container_name: user-service
    restart: always
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - CONSUL_HOST=consul-server
      - CONSUL_PORT=8500
      - DB_USERNAME=user
      - DB_PASSWORD=user
    depends_on:
      api-gateway:
        condition: service_started
    networks:
      - microservice-network

volumes:
  consul-data:
  consul-config:
  user-db-data:
  redis-data:


networks:
  microservice-network:
    driver: bridge
